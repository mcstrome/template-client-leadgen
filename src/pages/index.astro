---
// Site configuration can be moved to a separate config file if needed
const siteConfig = {
  title: 'Get in Touch',
  description: 'Fill out the form below and we\'ll get back to you as soon as possible.',
};
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="description" content={siteConfig.description} />
    <title>{siteConfig.title} | Lead Generation Template</title>
    
    <!-- Favicon -->
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="alternate icon" href="/favicon.ico" />
    
    <!-- Preconnect to external domains -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet" />
    
    <!-- Include Tailwind CSS -->
    <script>
      // Load Tailwind CSS from CDN for demo purposes
      // In production, you might want to use a build process
      if (typeof window !== 'undefined') {
        const link = document.createElement('link');
        link.href = 'https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css';
        link.rel = 'stylesheet';
        document.head.appendChild(link);
      }
    </script>
  </head>
  
  <body class="bg-gray-50 min-h-screen flex flex-col">
    <header class="bg-white shadow-sm">
      <div class="max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8">
        <h1 class="text-3xl font-bold text-gray-900">
          Lead Generation Template
        </h1>
      </div>
    </header>

    <main class="flex-grow">
      <div class="max-w-7xl mx-auto py-12 px-4 sm:px-6 lg:py-16 lg:px-8">
        <div class="text-center">
          <h2 class="text-3xl font-extrabold tracking-tight text-gray-900 sm:text-4xl">
            {siteConfig.title}
          </h2>
          <p class="mt-3 max-w-2xl mx-auto text-xl text-gray-500 sm:mt-4">
            {siteConfig.description}
          </p>
        </div>
        
        <div class="mt-12">
          <div class="bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10">
            <!-- Lead Form Content -->
            <div class="max-w-2xl mx-auto p-6 bg-white rounded-lg shadow-md">
  <form id="leadForm" class="space-y-6">
    <div>
      <label for="name" class="block text-sm font-medium text-gray-700 mb-1">
        Name <span class="text-red-500">*</span>
      </label>
      <input
        type="text"
        id="name"
        name="name"
        required
        class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent"
      />
    </div>

    <div>
      <label for="email" class="block text-sm font-medium text-gray-700 mb-1">
        Email <span class="text-red-500">*</span>
      </label>
      <input
        type="email"
        id="email"
        name="email"
        required
        class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent"
      />
    </div>

    <div>
      <label for="phone" class="block text-sm font-medium text-gray-700 mb-1">
        Phone (optional)
      </label>
      <input
        type="tel"
        id="phone"
        name="phone"
        class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent"
      />
    </div>

    <div>
      <label for="message" class="block text-sm font-medium text-gray-700 mb-1">
        Message <span class="text-red-500">*</span>
      </label>
      <textarea
        id="message"
        name="message"
        rows={4}
        required
        class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent"
      ></textarea>
    </div>

    <div class="pt-2">
      <button
        type="submit"
        id="submitButton"
        class="w-full flex justify-center py-3 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
      >
        Submit
      </button>
    </div>
    <div id="submitStatusMessage" class="hidden p-4 mt-4 rounded"></div>
  </form>
</div>

{/*
<script is:inline>
  if (typeof window !== 'undefined') {
    const form = document.getElementById('leadForm');
    const submitButton = document.getElementById('submitButton');
    const statusMessageDiv = document.getElementById('submitStatusMessage');

    form?.addEventListener('submit', async (e) => {
      e.preventDefault();

      // Disable button and show loading indicator
      if (submitButton) {
        submitButton.disabled = true;
        submitButton.textContent = 'Submitting...';
        submitButton.classList.remove('bg-blue-600', 'hover:bg-blue-700');
        submitButton.classList.add('bg-blue-400', 'cursor-not-allowed');
      }
      if (statusMessageDiv) {
        statusMessageDiv.textContent = '';
        statusMessageDiv.classList.add('hidden');
        statusMessageDiv.classList.remove('bg-green-100', 'text-green-800', 'bg-red-100', 'text-red-800');
      }

      const formData = new FormData(e.target);
      const data = Object.fromEntries(formData.entries());

      try {
        const response = await fetch('/api/submit', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            ...data,
            source: window.location.href,
          }),
        });

        const result = await response.json();

        if (statusMessageDiv) {
          statusMessageDiv.classList.remove('hidden');
          if (response.ok) {
            statusMessageDiv.textContent = 'Thank you for your submission! We will get back to you soon.';
            statusMessageDiv.classList.add('bg-green-100', 'text-green-800');
            form.reset();
          } else {
            statusMessageDiv.textContent = result.message || 'There was an error submitting your form. Please try again later.';
            statusMessageDiv.classList.add('bg-red-100', 'text-red-800');
            console.error('Form submission error:', result);
          }
        }

      } catch (error) {
        console.error('Form submission error:', error);
        if (statusMessageDiv) {
          statusMessageDiv.classList.remove('hidden');
          statusMessageDiv.textContent = 'There was an error submitting your form. Please try again later.';
          statusMessageDiv.classList.add('bg-red-100', 'text-red-800');
        }
      } finally {
        // Re-enable button
        if (submitButton) {
          submitButton.disabled = false;
          submitButton.textContent = 'Submit';
          submitButton.classList.add('bg-blue-600', 'hover:bg-blue-700');
          submitButton.classList.remove('bg-blue-400', 'cursor-not-allowed');
        }
      }
    });
  }
</script>
*/}

{/*
<style>
  /* Add any custom styles here */
</style>
*/}

          </div>
        </div>
      </div>
    </main>

    <footer class="bg-white border-t border-gray-200 mt-12">
      <div class="max-w-7xl mx-auto py-6 px-4 overflow-hidden sm:px-6 lg:px-8">
        <p class="text-center text-base text-gray-500">
          &copy; {new Date().getFullYear()} Lead Generation Template. All rights reserved.
        </p>
      </div>
    </footer>
  </body>
</html>
